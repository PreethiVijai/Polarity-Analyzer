[{"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/index.js":"1","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/App.js":"2","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/reportWebVitals.js":"3","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/Landing.js":"4","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/PolarityMap.js":"5","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/ApiRequests.js":"6","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/Navbar.js":"7"},{"size":500,"mtime":1607494607371,"results":"8","hashOfConfig":"9"},{"size":615,"mtime":1607581034438,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607494607372,"results":"11","hashOfConfig":"9"},{"size":553,"mtime":1607497408789,"results":"12","hashOfConfig":"9"},{"size":4812,"mtime":1607581476291,"results":"13","hashOfConfig":"9"},{"size":398,"mtime":1607573509007,"results":"14","hashOfConfig":"9"},{"size":1602,"mtime":1607581038343,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"199u4fq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/index.js",[],["33","34"],"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/App.js",[],"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/reportWebVitals.js",[],"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/Landing.js",[],"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/PolarityMap.js",["35","36","37","38","39","40"],"import React, {Component,Fragment} from 'react'\nimport { getTweets } from './ApiRequests'\nimport Geocode from \"react-geocode\";\nimport { withGoogleMap, GoogleMap, Marker, Circle } from 'react-google-maps';\nimport bp from './blue_pin.png';\nimport rp from './red_pin.png';\nimport gp from './green_pin.png';\nimport { render } from \"react-dom\";\nimport WordCloud from \"react-d3-cloud\";\nimport ReactWordcloud from 'react-wordcloud'\nimport cv from './covid.png'\n\nclass PolarityMap extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweet_tbl : [],\n      latitude:[],\n      longitude:[],\n      marker:[],\n      wordCloud:[]\n\n    }\n  }\n\n  componentDidMount() {\n    Geocode.setApiKey(\"AIzaSyCJn2KEsU2i1bdPGqF5pLqxv6dJfys3TXI\");\n    getTweets().then(res => {\n      if (!res.error) {\n        console.log(\"length\");\n        console.log(res.result[0]);\n        let my_sql_dataTable=new Array(res.result.length);\n        for(var i =0;i<res.result.length;i++){\n            my_sql_dataTable[i]= new Array(4);\n          }\n        for(i=0;i<res.result.length;i++){\n\n            my_sql_dataTable[i][0]=res.result[i].polarity;\n            my_sql_dataTable[i][1]=res.result[i].location;\n            my_sql_dataTable[i][2]=res.result[i].id;\n            my_sql_dataTable[i][3]=res.result[i].tweets.split(\" \");\n\n            this.data(my_sql_dataTable[i][1],my_sql_dataTable[i][2],my_sql_dataTable[i][0]);\n            this.state.tweet_tbl.push(my_sql_dataTable);\n            \n\n      }\n    }\n    this.create_word_cloud_data();\n   \n\n    })\n}\n    data(location,id,polarity){\n        Geocode.fromAddress(location).then(\n            response => {\n              const { lat, lng } = response.results[0].geometry.location;\n              this.state.latitude.push(lat);\n              this.state.longitude.push(lng);\n              let marker_arr=new Array(4);\n              marker_arr[0]=lat;\n              marker_arr[1]=lng;\n              marker_arr[2]=id;\n              if(polarity===0){\n                marker_arr[3]=gp;\n              }\n              if(polarity===1){\n                marker_arr[3]=bp;\n              }\n              if(polarity===-1){\n                marker_arr[3]=rp;\n              }\n              this.state.marker.push(marker_arr);\n\n            },\n            error => {\n                var lat=0;\n                var lng=0;\n                this.state.latitude.push(lat);\n              this.state.longitude.push(lng);\n              let marker_arr=new Array(4);\n              marker_arr[0]=lat;\n              marker_arr[1]=lng;\n              marker_arr[2]=id;\n              if(polarity===0){\n                marker_arr[3]=gp;\n              }\n              if(polarity===1){\n                marker_arr[3]=bp;\n              }\n              if(polarity===-1){\n                marker_arr[3]=rp;\n              }\n              this.state.marker.push(marker_arr);\n              console.error(\"skip\");\n            }\n\n          );\n    }\n  \n    create_word_cloud_data(){\n        let arr_dat = new Array(5*this.state.tweet_tbl.length);\n        for(var i =0;i<3;i++){\n            for(var j =0;j<this.state.tweet_tbl[i].length;j++){\n                let arr = new Array(10);\n                arr = this.state.tweet_tbl[i][j][3];\n\n                for(var k = 0;k<arr.length;k++){\n                    //console.log(arr[k]);\n                    const min = 1;\n                    const max = 25;\n                    const rand = min + Math.random() * (max - min);\n                     arr_dat[i] ={text:arr[k],value:Math.floor(rand)};\n                     this.state.wordCloud.push(arr_dat[i]);\n                }\n\n            }\n        }\n        console.log( this.state.wordCloud[10]);\n    }\n\n\n    render() {\n        \n        const fontSizeMapper = word => Math.log2(word.value) * 5;\n        const rotate = word => word.value % 360;\n        const GoogleMapExample = withGoogleMap(props => (\n            <GoogleMap\n              defaultCenter = { { lat: 40.756795, lng: -73.954298 } }\n              defaultZoom = { 13 }\n\n            >\n                \n                {this.state.marker.map(marker => (\n                    \n    <Marker\n      position={{ lat: marker[0], lng: marker[1] }}\n      key={marker[2]}\n      icon={{\n        url: marker[3],\n        anchor: new window.google.maps.Point(5, 58),\n        scaledSize: new window.google.maps.Size(20, 20)\n      }}\n      \n      \n    />\n    \n))}\n\n          \n               \n            </GoogleMap>\n            \n         ));\n\n      return ( \n          <Fragment>\n<GoogleMapExample\n          containerElement={ <div style={{ height: `1000px`, width: '1000px' }} /> }\n          mapElement={ <div style={{ height: `100%` }} /> }\n        />\n\n<img src={cv} alt=\"Logo\" />\n       \n\n\n    </Fragment>\n        \n\n)\n}\n\n}\n\n\nexport default PolarityMap;\n","/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/ApiRequests.js",[],["41","42"],"/Users/preethi/Documents/dcsc/datacenter-project/polarityui/src/components/Navbar.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":44,"nodeType":"49","messageId":"50","endLine":4,"endColumn":50},{"ruleId":"47","severity":1,"message":"51","line":8,"column":10,"nodeType":"49","messageId":"50","endLine":8,"endColumn":16},{"ruleId":"47","severity":1,"message":"52","line":9,"column":8,"nodeType":"49","messageId":"50","endLine":9,"endColumn":17},{"ruleId":"47","severity":1,"message":"53","line":10,"column":8,"nodeType":"49","messageId":"50","endLine":10,"endColumn":22},{"ruleId":"47","severity":1,"message":"54","line":126,"column":15,"nodeType":"49","messageId":"50","endLine":126,"endColumn":29},{"ruleId":"47","severity":1,"message":"55","line":127,"column":15,"nodeType":"49","messageId":"50","endLine":127,"endColumn":21},{"ruleId":"43","replacedBy":"56"},{"ruleId":"45","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Circle' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'WordCloud' is defined but never used.","'ReactWordcloud' is defined but never used.","'fontSizeMapper' is assigned a value but never used.","'rotate' is assigned a value but never used.",["58"],["59"],"no-global-assign","no-unsafe-negation"]